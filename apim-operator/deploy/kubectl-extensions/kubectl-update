#!/bin/bash
#Copyright (c)  WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Please copy this file to /usr/local/bin and give executable permissions
# Sample usage : kubectl update api <api-name> --from-file=<file> --replicas=<number of replicas> --namespace=<namespace>

print_error()
{
echo "Error: must specify api, api name and Swagger file location.
Update an API from a Swagger file.
JSON and YAML formats are accepted.
Examples:
  # Add an API using a Swagger file.
  kubectl update api petstore --from-file=./Swagger.json
  kubectl update api petstore --from-file=./Swagger.json --replicas=3
  kubectl update api petstore --from-file=./Swagger.json --namespace=wso2
  kubectl update api petstore --from-file=./Swagger.json --replicas=3 --namespace=wso2
Available Commands:
  api                 Update an API.
Options:
  --filename='': File Location
  --replicas='': Number of replicas
Usage:
  kubectl update api petstore --from-file=FILENAME [options] "
}


if [[ "$1" == "api" ]]
then

    if [[ "$2" == "" || "$3" == "" ]]
    then
        print_error
    else

        for var in "$@"
        do
            if [[ $var == *"--replicas"* ]]; then
              replicasArg=$var
            elif [[ "$var" == *"-n"* ]]; then
              namespace=$var
            fi
        done

        IFS='=';

        count=0
        replicas=1

        for i in $replicasArg;
        do
            ((count++))
            if [[ $count == 2 ]]; then
                  replicas=$i
            fi
        done

        apiName=$2

        echo -e "\nDeleteting configmap if exists with name "$apiName $namespace
        kubectl delete configmap $apiName $namespace

        echo -e "\nCreating configmap with name "$apiName $namespace
        kubectl create configmap $apiName $3 $namespace

        echo -e "\nUpdating the API kind"

cat << EOF > wso2_v1alpha1_api_cr.yaml
apiVersion: wso2.com/v1alpha1
kind: API
metadata:
 name: "${apiName}"
spec:
 definition:
  configmapName: "${apiName}"
  type: swagger
 replicas: ${replicas}
 mode: privateJet
 updateTimeStamp: "$(date +%s)"
EOF

        kubectl apply -f wso2_v1alpha1_api_cr.yaml $namespace
    fi
else
    print_error
fi
